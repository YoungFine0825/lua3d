---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yangfan
--- DateTime: 2021/11/15 20:05
---程序主入口，以及love2d相关的生命周期回调

require("const")
require("classlib")
require("mathlib")
require("render")

local loveGraphics = love.graphics
local loveTimer = love.timer
local deltaTime = 0
local fpsStrT = {'Fps: ',0}
local bgColor = Color.raywhite
local winWid = SCREEN_WIDTH
local winHei = SCREEN_HEIGHT
---@type Renderer
local renderer = classLib.Renderer.new()

local near = 1
local far = 10
local fov = 60
local aspect = winWid / winHei
local projectionMat = matrix4x4.perspective(math.rad(fov),aspect,near,far)

local cubeTrans = matrix4x4.identity()
local cubeRotate = matrix4x4.identity()
local cubeYaw = 0

local function start()
    love.window.setTitle("Lua 3d Pipeline")
    love.window.setMode(winWid, winHei, {resizable=false, vsync=false})
    renderer:Init(PIXEL_WIDTH,PIXEL_HEIGHT)
end

function love.load()
    ---@type VertexObject
    local cubeVertexObj = classLib.VertexObject.new()
    cubeVertexObj:SetVerticesData({
        0.5,    0.5,    0.5,--正面右上 1
        0.5,    -0.5,   0.5,--正面右下 2
        -0.5,   -0.5,   0.5,--正面左下 3
        -0.5,   0.5,    0.5,--正面左上 4
        0.5,    0.5,    -0.5,--反面右上 5
        0.5,    -0.5,   -0.5,--反面右下 6
        -0.5,   -0.5,   -0.5,--反面左下 7
        -0.5,   0.5,    -0.5,--反面左上 8
    })
    cubeVertexObj:SetVerticesNumber(8)
    cubeVertexObj:SetIndicesData({
        4,1,2,4,2,3,--正面两个三角形
        1,5,6,1,6,2, --右侧两个三角形
        5,8,7,5,7,6, --背面两个三角形
        8,4,3,8,3,7, --左侧两个三角形
        8,5,1,8,1,4,--顶部两个三角形
        3,2,6,3,6,7,--底部两个三角形
    })
    cubeVertexObj:SetTrianglesNumber(12)
    cubeVertexObj:SetLayout(1,0,3,3)
    renderer:BindVertexObject(cubeVertexObj)
    renderer:SetProjectionMatrix(projectionMat)
    --
end

function love.update(dt)
    deltaTime = deltaTime + dt
    --
    cubeTrans[3][4] = -3 + math.abs( math.cos(deltaTime) )
    ------
    cubeYaw = cubeYaw + 20 * dt
    local angleInRad = math.rad(cubeYaw )
    cubeRotate[1][1] = math.cos(angleInRad)
    cubeRotate[3][1] = math.sin(angleInRad)
    cubeRotate[1][3] = math.sin(angleInRad) * -1
    cubeRotate[3][3] = math.cos(angleInRad)
    --
    renderer:SetModelViewMatrix(cubeTrans * cubeRotate)
    --
end

function love.draw()
    renderer:ClearPixelBuffer(bgColor)
    renderer:Draw()
    renderer:OutputPixelBuffer(winWid,winHei)
    --
    loveGraphics.setColor(1,0,0,1)
    fpsStrT[2] = loveTimer.getFPS()
    loveGraphics.print(table.concat(fpsStrT,''))
end

do start() end